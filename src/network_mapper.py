# src/network_mapper.py

from scapy.all import ARP, Ether, srp

class NetworkMapper:
    def __init__(self):
        self.network_devices = []

    def map_network(self, target_ip):
        print(f"Mapping network for {target_ip}...")
        arp_request = ARP(pdst=target_ip)
        ether = Ether(dst="ff:ff:ff:ff:ff:ff")
        packet = ether / arp_request

        result = srp(packet, timeout=3, verbose=False)[0]

        for sent, received in result:
            self.network_devices.append({'ip': received.psrc, 'mac': received.hwsrc})

        return self.network_devices

