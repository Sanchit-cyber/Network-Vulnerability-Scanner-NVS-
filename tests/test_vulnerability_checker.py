# tests/test_vulnerability_checker.py

import unittest
from unittest.mock import patch
from src.vulnerability_checker import VulnerabilityChecker

class TestVulnerabilityChecker(unittest.TestCase):
    def setUp(self):
        self.vuln_checker = VulnerabilityChecker()

    @patch('requests.get')
    def test_check_vulnerability_found(self, mock_get):
        # Mock the API response
        mock_get.return_value.status_code = 200
        mock_get.return_value.json.return_value = {"vulns": [{"CVE": "CVE-2021-1234", "description": "Sample vulnerability."}]}
        
        result = self.vuln_checker.check_vulnerability('http', '2.4.41')
        self.assertIsNotNone(result)
        self.assertIn('vulns', result)

    @patch('requests.get')
    def test_check_vulnerability_not_found(self, mock_get):
        # Mock a 404 response
        mock_get.return_value.status_code = 404
        
        result = self.vuln_checker.check_vulnerability('http', '2.4.41')
        self.assertIsNone(result)

if __name__ == '__main__':
    unittest.main()

